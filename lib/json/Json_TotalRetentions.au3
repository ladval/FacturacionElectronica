#include <Array.au3>
; #FUNCTION# ===================================================================
; Name ..........: _InvoiceRetentions
; Description ...: Function that generates total Retention JSON, the individual Retentions values and the total value.
; Parameters ....: $aArray      		 - [REQUIRED] All the data extracted from the array invoice
;				   $aTaxesGnralData      - [REQUIRED] The taxes data generated by _TaxesGnralData
;				   $sDataType      		 - [OPTIONAL] JSON Default. The string parameter that defines result.
; Return values .: On Success 			 - Total Retention JSON, the individual Retentions values and the total value
; Author ........: Jesús A. Ladino
; ==============================================================================
Func _InvoiceRetentions($aArray, $aTaxesGnralData, $sDataType = "JSON")
	Local $aJSON_RetentionsResponse[0]
	;~ _ArrayAdd($aJSON_RetentionsResponse, '"InvoiceRetentionCharge": [')
	Local $iSum_RetentionAmount_Retefuente = 0
	Local $iSum_RetentionAmount_ReteICA = 0
	Local $iSum_RetentionAmount_ReteIVA = 0
	Local $iRetentionAmount_Retefuente = 0
	Local $iRetentionAmount_ReteICA = 0
	Local $iRetentionAmount_ReteIVA = 0
	Local $iCount = 0
	For $i = 0 To UBound($aTaxesGnralData) - 1 Step +1
		If $aTaxesGnralData[$i][2] == 1 Then
			$iSum_RetentionAmount_Retefuente += $aTaxesGnralData[$i][6]
			$iSum_RetentionAmount_ReteICA += $aTaxesGnralData[$i][7]
			$iSum_RetentionAmount_ReteIVA += $aTaxesGnralData[$i][8]
			$iCount += $aTaxesGnralData[$i][2]
		EndIf
	Next
	$iRetentionAmount_Retefuente = $iSum_RetentionAmount_Retefuente / $iCount
	$iRetentionAmount_ReteICA = $iSum_RetentionAmount_ReteICA / $iCount
	$iRetentionAmount_ReteIVA = $iSum_RetentionAmount_ReteIVA / $iCount
	Local $aRetentions[3] = [$iRetentionAmount_Retefuente, $iRetentionAmount_ReteICA, $iRetentionAmount_ReteIVA]
	For $i = 0 To UBound($aRetentions) - 1 Step +1
		If $aRetentions[$i] > 0 Then
			$aJSON_Retentions = _InfoJSON_TotalRetentions($i, $aTaxesGnralData)
			_ArrayConcatenate($aJSON_RetentionsResponse, $aJSON_Retentions)
		EndIf
	Next
	If $aRetentions[0] + $aRetentions[1] + $aRetentions[2] > 0 Then $aJSON_RetentionsResponse[UBound($aJSON_RetentionsResponse) - 1] = "}"
	_ArrayAdd($aJSON_RetentionsResponse, '],')
	Return $aJSON_RetentionsResponse
EndFunc   ;==>_InvoiceRetentions

; #FUNCTION# ===================================================================
; Name ..........: _InfoJSON_TotalRetentions
; Description ...: Function that returns the JSON fragment with the Retention totals
; Parameters ....: $iIndex      		 - [REQUIRED] The index generated by _InvoiceRetentions inside the array of taxes
;				   $iAmount      		 - [REQUIRED] The Retention amount
;				   $aArray      		 - [REQUIRED] The aTaxesGnralData array
; Return values .: On Success 			 - JSON fragment with the Retention totals
; Author ........: Jesús A. Ladino
; ==============================================================================
Func _InfoJSON_TotalRetentions($iIndex, $aArray)
	Local $iSum_Gravado, $iSum_Iva, $iSum_Retefuente, $iSum_Reteica, $iSum_Reteiva, $iCount
	For $i = 0 To UBound($aArray) - 1 Step +1
		If $aArray[$i][2] == 1 Then
			$iSum_Gravado += $aArray[$i][3]
			$iSum_Iva += $aArray[$i][4]
			$iSum_Retefuente += $aArray[$i][6]
			$iSum_Reteica += $aArray[$i][7]
			$iSum_Reteiva += $aArray[$i][8]
			$iCount += $aArray[$i][2]
		EndIf
	Next
	Local $sID_RtTax = "00"
	Local $sConcept_Default = ""
	Select
		Case $iIndex == 0                                                       ;Corresponde a la columna del arreglo que ingresa a la función.
			Local $sConcept_Default = "R.F. 4%"
			Local $iAmount = Round($iSum_Retefuente / $iCount, 2)
			Local $iBaseAmount = Round($iSum_Gravado, 2)
			Local $iRtf_Crudo = $iAmount / $iBaseAmount
			Local $iRtf_Percent = $iRtf_Crudo * 100
			Local $iRtfEntero = Round($iRtf_Percent, 1)
			Local $sPercent = $iRtfEntero
			Local $sID_RtTax = "06"
		Case $iIndex == 1                                                       ;Corresponde a la columna del arreglo que ingresa a la función.
			Local $sConcept_Default = "Retenc. ICA"
			Local $iAmount = Round($iSum_Reteica / $iCount, 2)
			Local $iBaseAmount = Round($iSum_Gravado, 2)
			Local $iIca_Crudo = $iAmount / $iBaseAmount
			Local $iIca_Percent = $iIca_Crudo * 100
			Local $iIcaEntero = Round($iIca_Percent, 3)
			Local $sPercent = $iIcaEntero
			Local $sID_RtTax = "07"
		Case $iIndex == 2                                                      ;Corresponde a la columna del arreglo que ingresa a la función.
			Local $sConcept_Default = "Retenc. IVA"
			Local $iAmount = Round($iSum_Reteiva / $iCount, 2)
			Local $iBaseAmount = Round($iSum_Iva, 2)
			Local $iRtIVA_Crudo = $iAmount / $iBaseAmount
			Local $iRtIVA_Percent = $iRtIVA_Crudo * 100
			Local $iRtIVAEntero = Round($iRtIVA_Percent, 0)
			Local $sPercent = $iRtIVAEntero
			Local $sID_RtTax = "05"
	EndSelect
	Local $aJsonRetention[8]
	$aJsonRetention[0] = '{'
	$aJsonRetention[1] = '"Id" : "' & $sID_RtTax & '",'
	$aJsonRetention[2] = '"ChargeIndicator" : true,'
	$aJsonRetention[3] = '"RetentionChargeReason" : "' & $sConcept_Default & '",'
	$aJsonRetention[4] = '"MultiplierFactorNumeric" : ' & $sPercent & ','
	$aJsonRetention[5] = '"Amount" : ' & $iAmount & ','
	$aJsonRetention[6] = '"BaseAmount" : ' & $iBaseAmount
	$aJsonRetention[7] = '},'
	Return $aJsonRetention
EndFunc   ;==>_InfoJSON_TotalRetentions










